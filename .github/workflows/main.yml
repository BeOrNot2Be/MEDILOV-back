name: Build
on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Install and build
    runs-on: ubuntu-latest
    container:
      image: node:13.6
      options: --network-alias testHost
    env:
      SELENIUM_HUB_HOST: hub
      TEST_HOST: testHost
    services:
      chrome:
        image: selenium/node-chrome:3.141.59-gold
        env:
          HUB_HOST: hub
          HUB_PORT: 4444
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
          architecture: "x64"

      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Start MongoDB
        uses: superchargejs/mongodb-github-action@1.1.0
        with:
          mongodb-version: 4.2

      - name: Cache Statics
        env:
          DJANGO_DEBUG_FALSE: ${{ secrets.DJANGO_DEBUG_FALSE }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          DBHOST: ${{ secrets.DBHOST }}
          DBNAME: ${{ secrets.DBNAME }}
          DBUSER: ${{ secrets.DBUSER }}
          DBUSERPASSWORD: ${{ secrets.DBUSERPASSWORD }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          WHEMAIL: ${{ secrets.WHEMAIL }}
          SITENAME: ${{ secrets.SITENAME }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          python manage.py collectstatic --noinput
          python manage.py compress
          python manage.py collectstatic --noinput

      - name: Test Urls, Forms, Models, Views
        env:
          DJANGO_DEBUG_FALSE: ${{ secrets.DJANGO_DEBUG_FALSE }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          DBHOST: ${{ secrets.DBHOST }}
          DBNAME: ${{ secrets.DBNAME }}
          DBUSER: ${{ secrets.DBUSER }}
          DBUSERPASSWORD: ${{ secrets.DBUSERPASSWORD }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          WHEMAIL: ${{ secrets.WHEMAIL }}
          SITENAME: ${{ secrets.SITENAME }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: python manage.py test medilov.tests

      - name: Test UI
        env:
          DJANGO_DEBUG_FALSE: ${{ secrets.DJANGO_DEBUG_FALSE }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          DBHOST: ${{ secrets.DBHOST }}
          DBNAME: ${{ secrets.DBNAME }}
          DBUSER: ${{ secrets.DBUSER }}
          DBUSERPASSWORD: ${{ secrets.DBUSERPASSWORD }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          WHEMAIL: ${{ secrets.WHEMAIL }}
          SITENAME: ${{ secrets.SITENAME }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: python manage.py test uitests
      # - name: Comment on PR
      #   uses: unsplash/comment-on-pr@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     msg: Try running it on [Mobile](https://expo.io/${{ steps.expo.outputs.path }})<br><br><a href="https://exp.host/${{ steps.expo.outputs.path }}"><img src="https://api.qrserver.com/v1/create-qr-code/?size=400x400&data=exp://exp.host/${{ steps.expo.outputs.path }}" height="200px" width="200px"></a>.
